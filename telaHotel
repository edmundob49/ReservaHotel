package hotel_eclipse;

import javax.swing.JOptionPane;
import java.util.InputMismatchException;

/**
 * @author Heber, Edmundo, jorlandes, Roberto e Luan
 */
public class telaHotel extends javax.swing.JFrame {

    /**
     * Creates new form telaHotel
     */
    public telaHotel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cadastrarHP = new javax.swing.JButton();
        cadastrarReserva = new javax.swing.JButton();
        consultarReserva = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listarReserva = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tela da Cadastros");

        jLabel1.setText("Cadastros de Hoteis e Pousadas");

        cadastrarHP.setText("Cadastrar Hotel ou Pousada");
        cadastrarHP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarHPActionPerformed(evt);
            }
        });

        cadastrarReserva.setText("Cadastrar Reserva");
        cadastrarReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarReservaActionPerformed(evt);
            }
        });

        consultarReserva.setText("Consultar Reserva");
        consultarReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarReservaActionPerformed(evt);
            }
        });

        listarReserva.setColumns(20);
        listarReserva.setRows(5);
        jScrollPane2.setViewportView(listarReserva);

        jLabel2.setText("Lista de Reservas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(consultarReserva)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cadastrarHP)
                        .addGap(30, 30, 30)
                        .addComponent(cadastrarReserva))
                    .addComponent(jLabel1))
                .addContainerGap(187, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cadastrarHP)
                    .addComponent(cadastrarReserva))
                .addGap(18, 18, 18)
                .addComponent(consultarReserva)
                .addGap(23, 23, 23)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    private void cadastrarHPActionPerformed(java.awt.event.ActionEvent evt) {                                         
 int mess = 0;
	    	int tipo = 1;
	    	String nome = "none";
	    	String busca = "nome";
	    	String cidade;
	    	String quarto; 
	    	hotel a;
	    	pousada b;
	    //	reserva c;
	    	repositorioHotelPousada rep =  new repositorioHotelPousada();
	   
	    do{
                try{
	    	    tipo = Integer.parseInt(JOptionPane.showInputDialog(null, "informe tipo de hospedagem \n 1-Hotel ou 2-Pousada "));
	    	        	    
		    	    switch (tipo){
		    	    
		    	    case 1:
		    	    	nome = JOptionPane.showInputDialog(null, "informe o nome do Hotel ");
			        	cidade = JOptionPane.showInputDialog(null, "informe a Cidade ");
			        	quarto = JOptionPane.showInputDialog(null, "informe o tipo de Quarto ");
			       	    a = new hotel(nome, cidade,quarto);
			        	
			  //     	    c = new reserva(nome, doc, a);
			       	    rep.inserirHotel(a);
			        	
			        	System.out.println("Nome do hotel " + a.getNome());
                                        System.out.println("Nome da cidade " + a.getCidade());
                                        System.out.println("Tipo de Servico " + a.getQuarto());
                                        System.out.println("Valor da diaria " + a.calculaDiaria());
                                        System.out.println();
			        	//busca = rep.procurarHotel(nome).getNome();
			        	
			        break;
		    	    case 2:
		    	    	
		    	    	nome = JOptionPane.showInputDialog(null, "informe o nome do Pousada ");
			        	cidade = JOptionPane.showInputDialog(null, "informe a Cidade ");
			        	quarto = JOptionPane.showInputDialog(null, "informe o tipo de Quarto ");
			       	    b = new pousada(nome, cidade,quarto);
			        	rep.inserirPousada(b);
			        	//busca = rep.procurarPousada(nome).getNome();
			        	System.out.println("Nome " + nome);
				    break;
				   
		    	    default:
				    
		    	    		JOptionPane.showMessageDialog(null, "Tipo de Hospedagem Inválido! \n Digite um valor inteiro \n 1-HOTEL \n 2-POUSADA");
		    	    		
		     		}
	    	   }catch( NumberFormatException ex ){
	    	
	    	JOptionPane.showMessageDialog(null, "Tipo de Hospedagem Inválido! \n Digite um valor inteiro \n 1-HOTEL \n 2-POUSADA");
	    	   	}
	    	    
	    	    
	            mess = JOptionPane.showConfirmDialog(null, "Deseja efetuar NOVO CADASTRO?");
	        	
	            System.out.println("Nome " + nome);	
	        	
	   }while(mess == 0);
	    
	    try{         	         	
	    	JOptionPane.showMessageDialog(null, busca);
	    	
	    }catch (Exception NullPointerException){
		    
	    	JOptionPane.showMessageDialog(null, "Hotel não Cadastrado!"); 
	    }     	
	  

	 
    
    }                                        

    private void cadastrarReservaActionPerformed(java.awt.event.ActionEvent evt) {                                         
  int mess = 0;
	    	int tipo = 1;
	    	String nomeCliente = "none";
	    	String busca = "nome";
	    	String cpfCliente;
                String nomeHotel;
                String nomePousada;
	    	hotel h;
                pousada p;
	    	reserva re;
	    	
	    //	reserva c;
	    	repositorioReserva repReserva =  new repositorioReserva();
                repositorioHotelPousada repHP =  new repositorioHotelPousada();
	   
	    do{
                try{
	    	    tipo = Integer.parseInt(JOptionPane.showInputDialog(null, "informe tipo de hospedagem \n 1-Hotel ou 2-Pousada "));
	    	       	    
		    	    switch (tipo){
		    	    
		    	    case 1:
		    	    	nomeCliente = JOptionPane.showInputDialog(null, "informe o nome do cliente ");
			        cpfCliente = JOptionPane.showInputDialog(null, "informe o cpf do cliente ");
			        	nomeHotel = JOptionPane.showInputDialog(null, "informe o nome do hotel do cliente ");
                                        h = repHP.procurarHotel(nomeHotel); //procurar o hote para depois adicionar a reserva
                                        
			       	    re = new reserva(nomeCliente, cpfCliente, h);
			        	
			  //     	    c = new reserva(nome, doc, a);
			       	    repReserva.inserirReserva(re);
			        	System.out.println("Informações da reserva: ");
			        	System.out.println("Nome do cliente " + re.getNomeCliente());
                                        System.out.println("CPF do cliente " +re.getCpf());
                                        System.out.println("Nome do Hotel " +re.getR());
                                        
                                        
			        	//busca = rep.procurarHotel(nome).getNome();
			        	
			        break;
		    	    case 2:
                                nomeCliente = JOptionPane.showInputDialog(null, "informe o nome do cliente ");
			        cpfCliente = JOptionPane.showInputDialog(null, "informe o cpf do cliente ");
			        	nomePousada = JOptionPane.showInputDialog(null, "informe a pousada do cliente ");
                                        p = repHP.procurarPousada(nomePousada); //procurar a pousada para depois adicionar a reserva
                                        
			       	    re = new reserva(nomeCliente, cpfCliente, p);
			        	
			  //     	    c = new reserva(nome, doc, a);
			       	    repReserva.inserirReserva(re);
			        	System.out.println("Informações da reserva: ");
			        	System.out.println("Nome do cliente " + re.getNomeCliente());
                                        System.out.println("CPF do cliente " +re.getCpf());
                                        System.out.println("Nome do Hotel " +re.getR().getNome());
                                        
                                        
			        	//busca = rep.procurarHotel(nome).getNome();
		    	    	
		    	    	
				    break;
				   
		    	    default:
				    
		    	    		JOptionPane.showMessageDialog(null, "Tipo de Hospedagem Inválido! \n Digite um valor inteiro \n 1-HOTEL \n 2-POUSADA");
		    	    		
		     		}
	    	   }catch( NumberFormatException ex ){
	    	
	    	JOptionPane.showMessageDialog(null, "Tipo de Hospedagem Inválido! \n Digite um valor inteiro \n 1-HOTEL \n 2-POUSADA");
	    	   	}
	    	    
	    	    
	            mess = JOptionPane.showConfirmDialog(null, "Deseja efetuar NOVO CADASTRO?");
	        	
	            System.out.println("Nome " + nomeCliente);	
	        	
	   }while(mess == 0);
	    
	    try{         	         	
	    	JOptionPane.showMessageDialog(null, busca);
	    	
	    }catch (Exception NullPointerException){
		    
	    	JOptionPane.showMessageDialog(null, "Reserva não Cadastrada!"); 
	    }     	
	  

    }                                        

    public void imprimirReserva(){
        System.out.println("Nome do hotel " );
    }
    private void consultarReservaActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        String nomeCliente = "none";
        reserva listaReserva;
        repositorioReserva repReserva =  new repositorioReserva();
        nomeCliente = JOptionPane.showInputDialog(null, "Informe o nome do cliente ");
         listaReserva = repReserva.procurarReserva(nomeCliente);
         
         
         listarReserva.setText(listaReserva.getNomeCliente());
         
         
    
        
        
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(telaHotel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(telaHotel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(telaHotel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(telaHotel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new telaHotel().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify
    private javax.swing.JButton cadastrarHP;
    private javax.swing.JButton cadastrarReserva;
    private javax.swing.JButton consultarReserva;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea listarReserva;
    // End of variables declaration
}
